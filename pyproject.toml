[tool.poetry]
# I use poetry as just a package manager.
# So, I only write the settings that poetry needs.
# The actual package metadata is written in setup.cfg.
# I use pypa/build for packaging.
name = "kitsuyui-pypi-playground"
version = "0.0.0"
description = ""
authors = []
package-mode = false

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
ruff = "*"
pytest = "*"
pytest-cov = "*"
poethepoet = "*"
setuptools-scm = "*"
build = "*"
twine = "*"
# https://github.com/python-poetry/poetry/issues/9293
docutils = "!=0.21.post1"

"kitsuyui.hello" = { path = "packages/kitsuyui-hello" , develop = true }
"kitsuyui.animal" = { path = "packages/kitsuyui-animal" , develop = true }

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.poe.tasks]
test = [
    {cmd = "poetry run poe test", cwd = "packages/kitsuyui-hello"},
    {cmd = "poetry run poe test", cwd = "packages/kitsuyui-animal"},
    {cmd = "poetry run pytest tests"},
]
update-monorepo = [
    {cmd = "poetry update", cwd = "packages/kitsuyui-hello"},
    {cmd = "poetry update", cwd = "packages/kitsuyui-animal"},
    {cmd = "poetry update"},
]
coverage-xml = [
    {cmd = "poetry run poe coverage-xml", cwd = "packages/kitsuyui-hello"},
    {cmd = "poetry run poe coverage-xml", cwd = "packages/kitsuyui-animal"},
]

format = "ruff format packages"
check = "ruff check packages"
build = [
    { cmd = "python -m build", cwd = "packages/kitsuyui-hello" },
    { cmd = "python -m build", cwd = "packages/kitsuyui-animal" },
]

check-publish = [
    { cmd = "poetry run twine check packages/**/dist/**/*" },
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = false

[tool.mypy-tests."*"]
disallow_untyped_defs = false
warn_return_any = false
ignore_missing_imports = true

[tool.ruff]
line-length = 79
